using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using BabyPlan.DataStructure;
using System.Web.Routing;
using System.Text;

namespace BabyPlan.mvcApp.UrlRoutes
{
    public class TradeListParam
    {
        public TradeListParam()
        {
            this.Category = ItemType.Ignore;
            this.Sex = SexType.Ignore;
            this.Age = 0;
        }

        public ItemType Category { get; set; }
        public SexType Sex { get; set; }
        public int Age { get; set; }
    }
    public class TradeListParamManager
    {
        public static TradeListParam ParamParse(string virtualPath)
        {
            TradeListParam param = new TradeListParam();

            if (virtualPath.Contains("宝宝衣服"))
            {
                param.Category = ItemType.Clothes;
            }
            else if (virtualPath.Contains("宝宝玩具"))
            {
                param.Category = ItemType.Toys;
            }
            else if (virtualPath.Contains("其他宝贝"))
            {
                param.Category = ItemType.Others;
            }

            if (virtualPath.Contains("男孩") || virtualPath.Contains("公子"))
            {
                param.Sex = SexType.Man;
            }
            else if (virtualPath.Contains("女孩") || virtualPath.Contains("公主"))
            {
                param.Sex = SexType.Woman;
            }

            if (virtualPath.Contains("1岁"))
            {
                param.Age = 1;
            }
            else if (virtualPath.Contains("2岁"))
            {
                param.Age = 2;
            }
            else if (virtualPath.Contains("3岁"))
            {
                param.Age = 3;
            }
            else if (virtualPath.Contains("4岁"))
            {
                param.Age = 4;
            }

            return param;
        }

        public static string GeneratParamUrl(RouteValueDictionary values)
        {
            StringBuilder path = new StringBuilder();

            if (values.ContainsKey("category"))
            {
                ItemType itemType = (ItemType)values["category"];
                switch (itemType)
                {
                    case ItemType.Clothes:
                        path.Append("宝宝衣服");
                        break;
                    case ItemType.Toys:
                        path.Append("宝宝玩具");
                        break;
                    case ItemType.Others:
                        path.Append("其他宝贝");
                        break;
                    default:
                        path.Append("所有宝贝");
                        break;
                }
            }
            else
            {
                path.Append("所有宝贝");
            }

            if (values.ContainsKey("sex"))
            {
                SexType sexType = (SexType)values["sex"];
                switch (sexType)
                {
                    case SexType.Man:
                        path.Append("-男孩");
                        break;
                    case SexType.Woman:
                        path.Append("-女孩");
                        break;
                }
            }

            if (values.ContainsKey("age"))
            {
                int age = (int)values["age"];
                switch (age)
                {
                    case 1:
                        path.Append("-0-1岁");
                        break;
                    case 2:
                        path.Append("-2岁");
                        break;
                    case 3:
                        path.Append("-3岁");
                        break;
                    case 4:
                        path.Append("-4岁");
                        break;
                }
            }

            return path.ToString();
        }
    }
}