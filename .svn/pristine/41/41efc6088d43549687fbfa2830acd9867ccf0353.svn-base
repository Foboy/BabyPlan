using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using BabyPlan.Common;
using BabyPlan.Model.Product;
using BabyPlan.Meta;
using BabyPlan.WcfService;

namespace BabyPlan.mvcApp.Controllers
{
    [Authorize]
    public class UserController : BaseController
    {
        //
        // GET: /User/
        public ActionResult Index()
        {
            ProductServiceClient client = new ProductServiceClient();
            AdvancedResult<PageEntity<ProProduct>> response = client.SearchBBPostList(CurrentToken, 1, 10);
            PageEntity<ProProduct> data = response.Data;

            return View("~/Views/User/Index.cshtml");
        }

        public ActionResult Goods()
        {
            return View("~/Views/User/Goods.cshtml");
        }

        public ActionResult AddGoods()
        {
            ViewBag.EncryptToken = CurrentToken;//SecurityHelper.GetToken(CurrentToken);
            return View("~/Views/User/AddGoods.cshtml");
        }

        public JsonResult AjaxAddGoods()
        {
            string goods = Request["goods"];
            RespResult response = new RespResult();
            if (string.IsNullOrEmpty(goods))
            {
                response.Error = DataStructure.AppError.ERROR_INVALID_PARAMETER;
                response.ErrorMessage = "数据丢失！";
            }
            else
            {
                Product product = JsonHelper.Deserialize<Product>(goods);
                if (product == null)
                {
                    response.Error = DataStructure.AppError.ERROR_INVALID_PARAMETER;
                    response.ErrorMessage = "无效数据！";
                }
                else
                {
                    ProductServiceClient client = new ProductServiceClient();
                    response = client.publishBBPost(product.Title, product.QQ, product.Phone, product.Description, CurrentToken);
                    if(response.Error == DataStructure.AppError.ERROR_SUCCESS)
                    {
                    foreach (var pitem in product.Items)
                    { 
                        
                    }
                    }
                    client.Close();
                    client = null;
                }
            }
            return Json("post"+goods);
        }

    }
}
