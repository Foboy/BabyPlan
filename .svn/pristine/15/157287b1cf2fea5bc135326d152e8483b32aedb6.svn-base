/**
 * @author yangchao
 * @email:aaronyangchao@gmail.com
 * @date: 2012/6/26 1:23:07
 */
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using System.Collections;
using MySql.Data;
using MySql.Data.MySqlClient;
using BabyPlan.Common;
using System.Collections;
using BabyPlan.Meta;


namespace BabyPlan.DataAccess
{
    public class ProProductItemAccessor
    {
        private MySqlCommand cmdInsertProProductItem;
        private MySqlCommand cmdDeleteProProductItem;
        private MySqlCommand cmdUpdateProProductItem;
        private MySqlCommand cmdLoadProProductItem;
        private MySqlCommand cmdLoadAllProProductItem;
        private MySqlCommand cmdGetProProductItemCount;
        private MySqlCommand cmdGetProProductItem;

        private ProProductItemAccessor()
        {
            #region cmdInsertProProductItem

            cmdInsertProProductItem = new MySqlCommand("INSERT INTO pro_product_item(pro_item_id,min_age,max_age,price,item_info,pic_url,pro_id,item_type,create_time,state,level) values (@ProItemId,@MinAge,@MaxAge,@Price,@ItemInfo,@PicUrl,@ProId,@ItemType,@CreateTime,@State,@Level)");

            cmdInsertProProductItem.Parameters.Add("@ProItemId", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@MinAge", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@MaxAge", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@Price", MySqlDbType.Decimal);
            cmdInsertProProductItem.Parameters.Add("@ItemInfo", MySqlDbType.String);
            cmdInsertProProductItem.Parameters.Add("@PicUrl", MySqlDbType.String);
            cmdInsertProProductItem.Parameters.Add("@ProId", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@ItemType", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@CreateTime", MySqlDbType.DateTime);
            cmdInsertProProductItem.Parameters.Add("@State", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@Level", MySqlDbType.Int32);
            #endregion

            #region cmdUpdateProProductItem

            cmdUpdateProProductItem = new MySqlCommand(" update pro_product_item set pro_item_id = @ProItemId,min_age = @MinAge,max_age = @MaxAge,price = @Price,item_info = @ItemInfo,pic_url = @PicUrl,pro_id = @ProId,item_type = @ItemType,create_time = @CreateTime,state = @State,level = @Level where pro_item_id = @ProItemId");
            cmdUpdateProProductItem.Parameters.Add("@ProItemId", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@MinAge", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@MaxAge", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@Price", MySqlDbType.Decimal);
            cmdUpdateProProductItem.Parameters.Add("@ItemInfo", MySqlDbType.String);
            cmdUpdateProProductItem.Parameters.Add("@PicUrl", MySqlDbType.String);
            cmdUpdateProProductItem.Parameters.Add("@ProId", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@ItemType", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@CreateTime", MySqlDbType.DateTime);
            cmdUpdateProProductItem.Parameters.Add("@State", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@Level", MySqlDbType.Int32);

            #endregion

            #region cmdLoadProProductItem

            cmdLoadProProductItem = new MySqlCommand(@" select pro_item_id,min_age,max_age,price,item_info,pic_url,pro_id,item_type,create_time,state,level from pro_product_item limit @PageIndex,@PageSize");
            cmdLoadProProductItem.Parameters.Add("@pageIndex", MySqlDbType.Int32);
            cmdLoadProProductItem.Parameters.Add("@pageSize", MySqlDbType.Int32);

            #endregion

            #region cmdGetProProductItemCount

            cmdGetProProductItemCount = new MySqlCommand(" select count(*)  from pro_product_item ");

            #endregion

            #region cmdLoadAllProProductItem

            cmdLoadAllProProductItem = new MySqlCommand(" select pro_item_id,min_age,max_age,price,item_info,pic_url,pro_id,item_type,create_time,state,level from pro_product_item");

            #endregion

            #region cmdGetProProductItem

            cmdGetProProductItem = new MySqlCommand(" select pro_item_id,min_age,max_age,price,item_info,pic_url,pro_id,item_type,create_time,state,level from pro_product_item where pro_item_id = @ProItemId");
            cmdGetProProductItem.Parameters.Add("@ProItemId", MySqlDbType.Int32);

            #endregion
        }

        /// <summary>
        /// 添加数据
        /// <param name="es">数据实体对象数组</param>
        /// <returns></returns>
        /// </summary>
        public bool Insert(ProProductItem e)
        {
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdInsertProProductItem = cmdInsertProProductItem.Clone() as MySqlCommand;
            bool returnValue = false;
            _cmdInsertProProductItem.Connection = oc;
            try
            {
                if (oc.State == ConnectionState.Closed)
                    oc.Open();
                _cmdInsertProProductItem.Parameters["@ProItemId"].Value = e.ProItemId;
                _cmdInsertProProductItem.Parameters["@MinAge"].Value = e.MinAge;
                _cmdInsertProProductItem.Parameters["@MaxAge"].Value = e.MaxAge;
                _cmdInsertProProductItem.Parameters["@Price"].Value = e.Price;
                _cmdInsertProProductItem.Parameters["@ItemInfo"].Value = e.ItemInfo;
                _cmdInsertProProductItem.Parameters["@PicUrl"].Value = e.PicUrl;
                _cmdInsertProProductItem.Parameters["@ProId"].Value = e.ProId;
                _cmdInsertProProductItem.Parameters["@ItemType"].Value = e.ItemType;
                _cmdInsertProProductItem.Parameters["@CreateTime"].Value = e.CreateTime;
                _cmdInsertProProductItem.Parameters["@State"].Value = e.State;
                _cmdInsertProProductItem.Parameters["@Level"].Value = e.Level;

                _cmdInsertProProductItem.ExecuteNonQuery();
                return returnValue;
            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdInsertProProductItem.Dispose();
                _cmdInsertProProductItem = null;
            }
        }

        /// <summary>
        /// 修改指定的数据
        /// <param name="e">修改后的数据实体对象</param>
        /// <para>数据对应的主键必须在实例中设置</para>
        /// </summary>
        public void Update(ProProductItem e)
        {
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdUpdateProProductItem = cmdUpdateProProductItem.Clone() as MySqlCommand;
            _cmdUpdateProProductItem.Connection = oc;

            try
            {
                if (oc.State == ConnectionState.Closed)
                    oc.Open();

                _cmdUpdateProProductItem.Parameters["@ProItemId"].Value = e.ProItemId;
                _cmdUpdateProProductItem.Parameters["@MinAge"].Value = e.MinAge;
                _cmdUpdateProProductItem.Parameters["@MaxAge"].Value = e.MaxAge;
                _cmdUpdateProProductItem.Parameters["@Price"].Value = e.Price;
                _cmdUpdateProProductItem.Parameters["@ItemInfo"].Value = e.ItemInfo;
                _cmdUpdateProProductItem.Parameters["@PicUrl"].Value = e.PicUrl;
                _cmdUpdateProProductItem.Parameters["@ProId"].Value = e.ProId;
                _cmdUpdateProProductItem.Parameters["@ItemType"].Value = e.ItemType;
                _cmdUpdateProProductItem.Parameters["@CreateTime"].Value = e.CreateTime;
                _cmdUpdateProProductItem.Parameters["@State"].Value = e.State;
                _cmdUpdateProProductItem.Parameters["@Level"].Value = e.Level;

                _cmdUpdateProProductItem.ExecuteNonQuery();

            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdUpdateProProductItem.Dispose();
                _cmdUpdateProProductItem = null;
                GC.Collect();
            }
        }

        /// <summary>
        /// 根据条件分页获取指定数据
        /// <param name="pageIndex">当前页</param>
        /// <para>索引从0开始</para>
        /// <param name="pageSize">每页记录条数</param>
        /// <para>记录数必须大于0</para>
        /// </summary>
        public PageEntity<ProProductItem> Search(Int32 ProItemId, Int32 MinAge, Int32 MaxAge, Decimal Price, String ItemInfo, String PicUrl, Int32 ProId, Int32 ItemType, DateTime CreateTime, Int32 State, Int32 Level, int pageIndex, int pageSize)
        {
            PageEntity<ProProductItem> returnValue = new PageEntity<ProProductItem>();
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdLoadProProductItem = cmdLoadProProductItem.Clone() as MySqlCommand;
            MySqlCommand _cmdGetProProductItemCount = cmdGetProProductItemCount.Clone() as MySqlCommand;
            _cmdLoadProProductItem.Connection = oc;
            _cmdGetProProductItemCount.Connection = oc;

            try
            {
                _cmdLoadProProductItem.Parameters["@PageIndex"].Value = pageIndex;
                _cmdLoadProProductItem.Parameters["@PageSize"].Value = pageSize;
                _cmdLoadProProductItem.Parameters["@ProItemId"].Value = ProItemId;
                _cmdLoadProProductItem.Parameters["@MinAge"].Value = MinAge;
                _cmdLoadProProductItem.Parameters["@MaxAge"].Value = MaxAge;
                _cmdLoadProProductItem.Parameters["@Price"].Value = Price;
                _cmdLoadProProductItem.Parameters["@ItemInfo"].Value = ItemInfo;
                _cmdLoadProProductItem.Parameters["@PicUrl"].Value = PicUrl;
                _cmdLoadProProductItem.Parameters["@ProId"].Value = ProId;
                _cmdLoadProProductItem.Parameters["@ItemType"].Value = ItemType;
                _cmdLoadProProductItem.Parameters["@CreateTime"].Value = CreateTime;
                _cmdLoadProProductItem.Parameters["@State"].Value = State;
                _cmdLoadProProductItem.Parameters["@Level"].Value = Level;

                if (oc.State == ConnectionState.Closed)
                    oc.Open();

                MySqlDataReader reader = _cmdLoadProProductItem.ExecuteReader();
                while (reader.Read())
                {
                    returnValue.Items.Add(new ProProductItem().BuildSampleEntity(reader));
                }
                returnValue.RecordsCount = (int)_cmdGetProProductItemCount.ExecuteScalar();
            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdLoadProProductItem.Dispose();
                _cmdLoadProProductItem = null;
                _cmdGetProProductItemCount.Dispose();
                _cmdGetProProductItemCount = null;
                GC.Collect();
            }
            return returnValue;

        }

        /// <summary>
        /// 获取全部数据
        /// </summary>
        public List<ProProductItem> Search()
        {
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdLoadAllProProductItem = cmdLoadAllProProductItem.Clone() as MySqlCommand;
            _cmdLoadAllProProductItem.Connection = oc; List<ProProductItem> returnValue = new List<ProProductItem>();
            try
            {
                _cmdLoadAllProProductItem.CommandText = string.Format(_cmdLoadAllProProductItem.CommandText, string.Empty);
                if (oc.State == ConnectionState.Closed)
                    oc.Open();

                MySqlDataReader reader = _cmdLoadAllProProductItem.ExecuteReader();
                while (reader.Read())
                {
                    returnValue.Add(new ProProductItem().BuildSampleEntity(reader));
                }
            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdLoadAllProProductItem.Dispose();
                _cmdLoadAllProProductItem = null;
                GC.Collect();
            }
            return returnValue;
        }

        /// <summary>
        /// 获取指定记录
        /// <param name="id">Id值</param>
        /// </summary>
        public ProProductItem Get(int ProItemId)
        {
            ProProductItem returnValue = null;
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdGetProProductItem = cmdGetProProductItem.Clone() as MySqlCommand;

            _cmdGetProProductItem.Connection = oc;
            try
            {
                _cmdGetProProductItem.Parameters["@ProItemId"].Value = ProItemId;

                if (oc.State == ConnectionState.Closed)
                    oc.Open();

                MySqlDataReader reader = _cmdGetProProductItem.ExecuteReader();
                if (reader.HasRows)
                {
                    reader.Read();
                    returnValue = new ProProductItem().BuildSampleEntity(reader);
                }
            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdGetProProductItem.Dispose();
                _cmdGetProProductItem = null;
                GC.Collect();
            }
            return returnValue;

        }
        private static readonly ProProductItemAccessor instance = new ProProductItemAccessor();
        public static ProProductItemAccessor Instance
        {
            get
            {
                return instance;
            }
        }

    }
}
