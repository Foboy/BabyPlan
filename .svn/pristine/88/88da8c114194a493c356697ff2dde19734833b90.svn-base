using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using BabyPlan.Meta;
using BabyPlan.WcfService;
using BabyPlan.Common;

namespace BabyPlan.mvcApp.Model
{
    [Serializable]
    public class ProductModel : BaseModel
    {
        public int Id { get; set; }

        public string Title { get; set; }

        public string QQ { get; set; }

        public string Phone { get; set; }

        public string Description { get; set; }

        public DateTime CreateTime { get; set; }

        public int CommentsNum { get; set; }

        public int ViewNum { get; set; }

        public PicModel Pic { get; set; }

        public UserModel Author { get; set; }

        public IList<ProductItemModel> Items { get; set; }

        public ProductModel Bind(ProProduct product, int bindItemsNum = -1,ProductBindType bindType= ProductBindType.None)
        {
            this.Id = product.Pid;
            this.Title = product.Title;
            this.Description = product.BbInfo;
            this.CreateTime = product.CreateTime;

            if (product.BBList != null)
            {
                this.Items = ProductItemModel.BindList(product.BBList, bindItemsNum);
            }

            if (ContainEnumType<ProductBindType>(bindType, ProductBindType.Author))
            {
                UserServiceClient client = new UserServiceClient();
                AdvancedResult<AdUser> userRes = client.GetUserInfoByID(product.CreateId);
                if (userRes.Error == DataStructure.AppError.ERROR_SUCCESS && userRes.Data != null)
                {
                    if (!string.IsNullOrEmpty(userRes.Data.Qq))
                        this.QQ = userRes.Data.Qq;
                    if (!string.IsNullOrEmpty(userRes.Data.Mobile))
                        this.Phone = userRes.Data.Mobile;
                }
            }
            return this;
        }

        public IList<ProductModel> BindList(IEnumerable<ProProduct> products, int bindItemsNum = -1, ProductBindType bindType = ProductBindType.None)
        { 
            List<ProductModel> models= new List<ProductModel>();
            if (products != null)
            {
                foreach (ProProduct p in products)
                {
                    models.Add(new ProductModel().Bind(p, bindItemsNum));
                }
            }
            return models;
        }
    }

    public enum ProductBindType
    {
        None = 0,
        ViewNum = 1,
        ReplayNum = 2,
        Author = 4
    }
}