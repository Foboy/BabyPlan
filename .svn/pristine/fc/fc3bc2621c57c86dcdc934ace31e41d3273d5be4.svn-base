/**
 * @author yangchao
 * @email:aaronyangchao@gmail.com
 * @date: 2012/7/9 23:17:13
 */
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data;
using System.Collections;
using MySql.Data;
using MySql.Data.MySqlClient;
using BabyPlan.Common;
using BabyPlan.Meta;
using BabyPlan.DataStructure;


namespace BabyPlan.DataAccess
{
    public class ProProductItemAccessor
    {
        private MySqlCommand cmdInsertProProductItem;
        private MySqlCommand cmdDeleteProProductItem;
        private MySqlCommand cmdUpdateProProductItem;
        private MySqlCommand cmdLoadAllProProductItem;
        private MySqlCommand cmdGetProProductItem;

        private ProProductItemAccessor()
        {
            #region cmdInsertProProductItem

            cmdInsertProProductItem = new MySqlCommand("INSERT INTO pro_product_item(pro_item_id,item_info,pro_id,create_time,state,level) values (@ProItemId,@ItemInfo,@ProId,@CreateTime,@State,@Level)");

            cmdInsertProProductItem.Parameters.Add("@ProItemId", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@ItemInfo", MySqlDbType.String);
            cmdInsertProProductItem.Parameters.Add("@ProId", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@CreateTime", MySqlDbType.DateTime);
            cmdInsertProProductItem.Parameters.Add("@State", MySqlDbType.Int32);
            cmdInsertProProductItem.Parameters.Add("@Level", MySqlDbType.Int32);
            #endregion

            #region cmdUpdateProProductItem

            cmdUpdateProProductItem = new MySqlCommand(" update pro_product_item set item_info = @ItemInfo,pro_id = @ProId,create_time = @CreateTime,state = @State,level = @Level where pro_item_id = @ProItemId");
            cmdUpdateProProductItem.Parameters.Add("@ProItemId", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@ItemInfo", MySqlDbType.String);
            cmdUpdateProProductItem.Parameters.Add("@ProId", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@CreateTime", MySqlDbType.DateTime);
            cmdUpdateProProductItem.Parameters.Add("@State", MySqlDbType.Int32);
            cmdUpdateProProductItem.Parameters.Add("@Level", MySqlDbType.Int32);

            #endregion

            #region cmdDeleteProProductItem

            cmdDeleteProProductItem = new MySqlCommand(" delete from pro_product_item where pro_item_id = @ProItemId");
            cmdDeleteProProductItem.Parameters.Add("@ProItemId", MySqlDbType.Int32);
            #endregion

            #region cmdLoadAllProProductItem

            cmdLoadAllProProductItem = new MySqlCommand(@"select 
                                                        pro_item_id,
                                                        item_info,
                                                        pro_id,
                                                        create_time,
                                                        pi.state,
                                                        level,
                                                        p.pic_url,
                                                p.pic_height,
                                                p.pic_width,
                                                p.pic_id
                                                    from
                                                        pro_product_item pi
                                                            left join
                                                         (select pp.* from res_pic pp where pp.obj_type = 1) p ON pi.pro_item_id = p.obj_id
                                                    where pro_id = @pid");
            cmdLoadAllProProductItem.Parameters.Add("@pid", MySqlDbType.Int32);
            #endregion

            #region cmdGetProProductItem

            cmdGetProProductItem = new MySqlCommand(@" select pro_item_id,item_info,pro_id,create_time,pi.state,level ,p.pic_url,
                                                p.pic_height,
                                                p.pic_width,
                                                p.pic_id
                                                    from
                                                        pro_product_item pi
                                                            left join
                                                         (select pp.* from res_pic pp where pp.obj_type = 1) p ON pi.pro_item_id = p.obj_id
                                                    where pro_item_id = @ProItemId");
            cmdGetProProductItem.Parameters.Add("@ProItemId", MySqlDbType.Int32);

            #endregion
        }

        /// <summary>
        /// 添加数据
        /// <param name="es">数据实体对象数组</param>
        /// <returns></returns>
        /// </summary>
        public int Insert(ProProductItem e)
        {
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdInsertProProductItem = cmdInsertProProductItem.Clone() as MySqlCommand;
            int returnValue = 0;
            _cmdInsertProProductItem.Connection = oc;
            try
            {
                if (oc.State == ConnectionState.Closed)
                    oc.Open();

                _cmdInsertProProductItem.Parameters["@ItemInfo"].Value = e.ItemInfo;
                _cmdInsertProProductItem.Parameters["@ProId"].Value = e.ProId;
              
                _cmdInsertProProductItem.Parameters["@CreateTime"].Value = DateTime.Now;
                _cmdInsertProProductItem.Parameters["@State"].Value = (int)e.State;
                _cmdInsertProProductItem.Parameters["@Level"].Value = (int)e.Level;
               

                _cmdInsertProProductItem.ExecuteNonQuery();
                returnValue = (int)_cmdInsertProProductItem.LastInsertedId;
                return returnValue;
            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdInsertProProductItem.Dispose();
                _cmdInsertProProductItem = null;
            }
        }

        /// <summary>
        /// 修改指定的数据
        /// <param name="e">修改后的数据实体对象</param>
        /// <para>数据对应的主键必须在实例中设置</para>
        /// </summary>
        public void Update(ProProductItem e)
        {
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdUpdateProProductItem = cmdUpdateProProductItem.Clone() as MySqlCommand;
            _cmdUpdateProProductItem.Connection = oc;

            try
            {
                if (oc.State == ConnectionState.Closed)
                    oc.Open();

                _cmdUpdateProProductItem.Parameters["@ProItemId"].Value = e.ProItemId;

                _cmdUpdateProProductItem.Parameters["@ItemInfo"].Value = e.ItemInfo;
                _cmdUpdateProProductItem.Parameters["@ProId"].Value = e.ProId;

                _cmdUpdateProProductItem.Parameters["@CreateTime"].Value = DateTime.Now;
                _cmdUpdateProProductItem.Parameters["@State"].Value = (int)e.State;
                _cmdUpdateProProductItem.Parameters["@Level"].Value = (int)e.Level;


                _cmdUpdateProProductItem.ExecuteNonQuery();

            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdUpdateProProductItem.Dispose();
                _cmdUpdateProProductItem = null;
                GC.Collect();
            }
        }

        /// <summary>
        /// 修改指定的数据
        /// <param name="e">修改后的数据实体对象</param>
        /// <para>数据对应的主键必须在实例中设置</para>
        /// </summary>
        public void Delete(int bbid)
        {
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdDeleteProProductItem = cmdDeleteProProductItem.Clone() as MySqlCommand;
            _cmdDeleteProProductItem.Connection = oc;

            try
            {
                if (oc.State == ConnectionState.Closed)
                    oc.Open();

                _cmdDeleteProProductItem.Parameters["@ProItemId"].Value = bbid;

                _cmdDeleteProProductItem.ExecuteNonQuery();

            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdDeleteProProductItem.Dispose();
                _cmdDeleteProProductItem = null;
                GC.Collect();
            }
        }


    
        /// <summary>
        /// 获取全部数据
        /// </summary>
        public List<ProProductItem> Search(int pid)
        {
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdLoadAllProProductItem = cmdLoadAllProProductItem.Clone() as MySqlCommand;
            _cmdLoadAllProProductItem.Connection = oc; 
            List<ProProductItem> returnValue = new List<ProProductItem>();
            try
            {
                _cmdLoadAllProProductItem.CommandText = string.Format(_cmdLoadAllProProductItem.CommandText, string.Empty);
                if (oc.State == ConnectionState.Closed)
                    oc.Open();
                _cmdLoadAllProProductItem.Parameters["@pid"].Value = pid;
                MySqlDataReader reader = _cmdLoadAllProProductItem.ExecuteReader();
                while (reader.Read())
                {
                    returnValue.Add(new ProProductItem().BuildSampleEntity(reader));
                }
            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdLoadAllProProductItem.Dispose();
                _cmdLoadAllProProductItem = null;
                GC.Collect();
            }
            return returnValue;
        }

        /// <summary>
        /// 获取指定记录
        /// <param name="id">Id值</param>
        /// </summary>
        public ProProductItem Get(int ProItemId)
        {
            ProProductItem returnValue = null;
            MySqlConnection oc = ConnectManager.Create();
            MySqlCommand _cmdGetProProductItem = cmdGetProProductItem.Clone() as MySqlCommand;

            _cmdGetProProductItem.Connection = oc;
            try
            {
                _cmdGetProProductItem.Parameters["@ProItemId"].Value = ProItemId;

                if (oc.State == ConnectionState.Closed)
                    oc.Open();

                MySqlDataReader reader = _cmdGetProProductItem.ExecuteReader();
                if (reader.HasRows)
                {
                    reader.Read();
                    returnValue = new ProProductItem().BuildSampleEntity(reader);
                }
            }
            finally
            {
                oc.Close();
                oc.Dispose();
                oc = null;
                _cmdGetProProductItem.Dispose();
                _cmdGetProProductItem = null;
                GC.Collect();
            }
            return returnValue;

        }
        private static readonly ProProductItemAccessor instance = new ProProductItemAccessor();
        public static ProProductItemAccessor Instance
        {
            get
            {
                return instance;
            }
        }

    }
}
